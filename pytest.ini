[pytest]
# Paths to search for tests (modify this to match your project structure)
testpaths = tests

# File patterns for discovering test files
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# By default, pytest captures the standard output and standard error during test execution.
# The following settings disable capturing, so you can see the log messages in real-time.
# You can also add "-s" option to the pytest command to achieve the same effect.

# Disable capturing of stdout
# By default, pytest captures stdout and displays it after a test has failed.
# By setting this to "no", you will see all stdout in real-time.
# This is useful for seeing log messages during test execution.
addopts = -s

# You can also add other options to the "addopts" line if needed, such as the following:
# -v: Increase verbosity (show more information about test execution).
# --tb=short: Show short tracebacks on test failure.
# --cov=your_module: Enable coverage and specify the module to measure coverage for.
# --cov-report=html: Generate an HTML report of coverage.

log_cli = False

# Log format
# You can customize the log format using the following format placeholders:
# %(asctime)s: Human-readable timestamp
# %(levelname)s: Log level name (e.g., INFO, ERROR, DEBUG, etc.)
# %(name)s: Logger name
# %(message)s: The log message
log_cli_format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
